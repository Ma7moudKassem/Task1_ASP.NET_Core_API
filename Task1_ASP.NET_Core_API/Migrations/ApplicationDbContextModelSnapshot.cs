// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task1_ASP.NET_Core_API.Data;

#nullable disable

namespace Task1_ASP.NET_Core_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Task1_ASP.NET_Core_API.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AddressNumber")
                        .HasColumnType("int");

                    b.Property<string>("AddressStreet")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<int>("ProspectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProspectId");

                    b.ToTable("CustomerTable", (string)null);
                });

            modelBuilder.Entity("Task1_ASP.NET_Core_API.Entities.CustomerEmployee", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("CustomerId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("CustomerEmployeeTable", (string)null);
                });

            modelBuilder.Entity("Task1_ASP.NET_Core_API.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AddressNumber")
                        .HasColumnType("int");

                    b.Property<string>("AddressStreet")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EmpolyeeTable", (string)null);
                });

            modelBuilder.Entity("Task1_ASP.NET_Core_API.Entities.Prospect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AddressNumber")
                        .HasColumnType("int");

                    b.Property<string>("AddressStreet")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProspectTable", (string)null);
                });

            modelBuilder.Entity("Task1_ASP.NET_Core_API.Entities.ProspectEmpolyee", b =>
                {
                    b.Property<int>("ProspectId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("ProspectId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ProspectEmpolyeeTable", (string)null);
                });

            modelBuilder.Entity("Task1_ASP.NET_Core_API.Entities.Customer", b =>
                {
                    b.HasOne("Task1_ASP.NET_Core_API.Entities.Prospect", "Prospect")
                        .WithMany()
                        .HasForeignKey("ProspectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prospect");
                });

            modelBuilder.Entity("Task1_ASP.NET_Core_API.Entities.CustomerEmployee", b =>
                {
                    b.HasOne("Task1_ASP.NET_Core_API.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Task1_ASP.NET_Core_API.Entities.Employee", "Employee")
                        .WithMany("CustomerEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Task1_ASP.NET_Core_API.Entities.ProspectEmpolyee", b =>
                {
                    b.HasOne("Task1_ASP.NET_Core_API.Entities.Employee", "Employee")
                        .WithMany("ProspectEmpolyees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Task1_ASP.NET_Core_API.Entities.Prospect", "Prospect")
                        .WithMany()
                        .HasForeignKey("ProspectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Prospect");
                });

            modelBuilder.Entity("Task1_ASP.NET_Core_API.Entities.Employee", b =>
                {
                    b.Navigation("CustomerEmployees");

                    b.Navigation("ProspectEmpolyees");
                });
#pragma warning restore 612, 618
        }
    }
}
